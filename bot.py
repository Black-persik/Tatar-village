import os
import logging
import asyncio
import random
from aiogram import Bot, Dispatcher, types, F
from aiogram.filters import Command
from aiogram.types import FSInputFile
from aiogram.client.default import DefaultBotProperties
from aiogram.enums import ParseMode

from main import DatabaseManager
from config import API_TOKEN, DATABASE_URL

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=API_TOKEN, default=DefaultBotProperties(parse_mode=ParseMode.HTML))
dp = Dispatcher()

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
db = DatabaseManager(DATABASE_URL)

# –ü–∞–ø–∫–∏ –¥–ª—è –º–µ–¥–∏–∞
VOICES_DIR = "voices"
IMAGES_DIR = "images"

# –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
os.makedirs(VOICES_DIR, exist_ok=True)
os.makedirs(IMAGES_DIR, exist_ok=True)

# –§—Ä–∞–∑—ã –æ —Ç–∞—Ç–∞—Ä—Å–∫–æ–π –¥–µ—Ä–µ–≤–Ω–µ —Å –ø–µ—Ä–µ–≤–æ–¥–æ–º –∏ –∫—É–ª—å—Ç—É—Ä–Ω—ã–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º
TATAR_VILLAGE_PHRASES = [
    {
        "tatar": "”ò–±–∏ –ø–µ—à–µ—Ä–µ–ª–≥”ô–Ω —á”ô–π –±–µ–ª”ô–Ω –∫—É–Ω–∞–∫ –∫–∞–±—É–ª –∏—Ç”ô.",
        "russian": "–ë–∞–±—É—à–∫–∞ —É–≥–æ—â–∞–µ—Ç –≥–æ—Å—Ç–µ–π —Å–≤–µ–∂–µ–∑–∞–≤–∞—Ä–µ–Ω–Ω—ã–º —á–∞–µ–º.",
        "explanation": "–ß–∞–π - –≤–∞–∂–Ω–∞—è —á–∞—Å—Ç—å —Ç–∞—Ç–∞—Ä—Å–∫–æ–π –∫—É–ª—å—Ç—É—Ä—ã. –ì–æ—Å—Ç–µ–π –≤—Å–µ–≥–¥–∞ –≤—Å—Ç—Ä–µ—á–∞—é—Ç —á–∞–µ–ø–∏—Ç–∏–µ–º —Å —Ç—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω—ã–º–∏ —É–≥–æ—â–µ–Ω–∏—è–º–∏."
    },
    {
        "tatar": "–ë–∞–±–∞–π —è—Ä—Å—É –±–µ–ª”ô–Ω –±–∞–∫—á–∞–¥–∞ —ç—à–ª–∏.",
        "russian": "–î–µ–¥—É—à–∫–∞ —É—Å–µ—Ä–¥–Ω–æ —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ –æ–≥–æ—Ä–æ–¥–µ.",
        "explanation": "–°–µ–ª—å—Å–∫–æ–µ —Ö–æ–∑—è–π—Å—Ç–≤–æ —Ç—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω–æ –≤–∞–∂–Ω–æ –¥–ª—è —Ç–∞—Ç–∞—Ä. –ú–Ω–æ–≥–∏–µ —Å–µ–º—å–∏ –∏–º–µ—é—Ç —Å–≤–æ–∏ –æ–≥–æ—Ä–æ–¥—ã –∏ –≤—ã—Ä–∞—â–∏–≤–∞—é—Ç –æ–≤–æ—â–∏."
    },
    {
        "tatar": "–ö–∏—á –±–µ–ª”ô–Ω –±”©—Ç–µ–Ω –≥–∞–∏–ª”ô “ó—ã–µ–Ω—ã–Ω–¥–∞ “ó—ã–ª—ã —Å—É–∑–ª”ô—Ä —Å”©–π–ª”ô—à–µ–ø —É—Ç—ã—Ä–∞–ª–∞—Ä.",
        "russian": "–í–µ—á–µ—Ä–æ–º –≤—Å—è —Å–µ–º—å—è —Å–æ–±–∏—Ä–∞–µ—Ç—Å—è –∑–∞ –æ–±—â–∏–º —Å—Ç–æ–ª–æ–º –∏ –≤–µ–¥–µ—Ç —Ç–µ–ø–ª—ã–µ –±–µ—Å–µ–¥—ã.",
        "explanation": "–°–µ–º–µ–π–Ω—ã–µ —Ü–µ–Ω–Ω–æ—Å—Ç–∏ –∑–∞–Ω–∏–º–∞—é—Ç —Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω–æ–µ –º–µ—Å—Ç–æ –≤ —Ç–∞—Ç–∞—Ä—Å–∫–æ–π –∫—É–ª—å—Ç—É—Ä–µ."
    },
    {
        "tatar": "”ò–±–∏ –ø–µ—á”ô–Ω –±”ô–ª–µ—à–µ ”ô–∑–µ—Ä–ª–∏.",
        "russian": "–ë–∞–±—É—à–∫–∞ –≥–æ—Ç–æ–≤–∏—Ç —ç—á–ø–æ—á–º–∞–∫ (—Ç—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω—ã–π —Ç–∞—Ç–∞—Ä—Å–∫–∏–π –ø–∏—Ä–æ–≥).",
        "explanation": "–¢–∞—Ç–∞—Ä—Å–∫–∞—è –∫—É—Ö–Ω—è —Å–ª–∞–≤–∏—Ç—Å—è —Å–≤–æ–µ–π –≤—ã–ø–µ—á–∫–æ–π. –≠—á–ø–æ—á–º–∞–∫ - —Ç—Ä–µ—É–≥–æ–ª—å–Ω—ã–π –ø–∏—Ä–æ–≥ —Å –Ω–∞—á–∏–Ω–∫–æ–π –∏–∑ –º—è—Å–∞ –∏ –∫–∞—Ä—Ç–æ—Ñ–µ–ª—è."
    },
    {
        "tatar": "–ú”ô—á–µ—Ç—Ç”ô–Ω –∞–∑–∞–Ω —Ç–∞–≤—ã—à—ã –∏—à–µ—Ç–µ–ª”ô.",
        "russian": "–° –º–µ—á–µ—Ç–∏ —Å–ª—ã—à–µ–Ω –∑–≤—É–∫ –∞–∑–∞–Ω–∞ (–ø—Ä–∏–∑—ã–≤ –∫ –º–æ–ª–∏—Ç–≤–µ).",
        "explanation": "–ò—Å–ª–∞–º —è–≤–ª—è–µ—Ç—Å—è –≤–∞–∂–Ω–æ–π —á–∞—Å—Ç—å—é —Ç–∞—Ç–∞—Ä—Å–∫–æ–π –∫—É–ª—å—Ç—É—Ä—ã –∏ –ø–æ–≤—Å–µ–¥–Ω–µ–≤–Ω–æ–π –∂–∏–∑–Ω–∏."
    },
    {
        "tatar": "–ë–∞–±–∞–π –∞—Ç–Ω—ã –∞–∫–∫–∞–ª—ã–π, ”ô ”ô–±–∏ —Å–∞–≤—ã—Ç-—Å–∞–±–∞ —é–∞.",
        "russian": "–î–µ–¥—É—à–∫–∞ —É—Ö–∞–∂–∏–≤–∞–µ—Ç –∑–∞ –ª–æ—à–∞–¥—å—é, –∞ –±–∞–±—É—à–∫–∞ –º–æ–µ—Ç –ø–æ—Å—É–¥—É.",
        "explanation": "–¢—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω–æ–µ —Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ –æ–±—è–∑–∞–Ω–Ω–æ—Å—Ç–µ–π –≤ —Ç–∞—Ç–∞—Ä—Å–∫–æ–π —Å–µ–º—å–µ."
    },
    {
        "tatar": "–ò—Ä—Ç”ô –±–µ–ª”ô–Ω –º”©”ô–∑–∏–Ω–Ω–µ“£ –∞–∑–∞–Ω —Ç–∞–≤—ã—à—ã –∏—à–µ—Ç–µ–ª–¥–µ.",
        "russian": "–£—Ç—Ä–æ–º —Å–ª—ã—à–µ–Ω –≥–æ–ª–æ—Å –º—É—ç–¥–∑–∏–Ω–∞, –ø—Ä–∏–∑—ã–≤–∞—é—â–µ–≥–æ –∫ –º–æ–ª–∏—Ç–≤–µ.",
        "explanation": "–†–µ–ª–∏–≥–∏–æ–∑–Ω—ã–µ —Ç—Ä–∞–¥–∏—Ü–∏–∏ –∑–∞–Ω–∏–º–∞—é—Ç –≤–∞–∂–Ω–æ–µ –º–µ—Å—Ç–æ –≤ –∂–∏–∑–Ω–∏ —Ç–∞—Ç–∞—Ä—Å–∫–æ–π –¥–µ—Ä–µ–≤–Ω–∏."
    }
]


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@dp.message(Command("start"))
async def send_welcome(message: types.Message):
    user_id = message.from_user.id
    user_name = message.from_user.full_name

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–ª–∏ —Å–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user = await db.get_user_by_telegram_id_async(user_id)
    if not user:
        await db.create_user_async(user_id, user_name)

    await message.answer(f"–°”ô–ª–∞–º, {user_name}! –ú–∏–Ω —Ç–∞—Ç–∞—Ä —Ç–µ–ª–µ–Ω ”©–π—Ä”ô–Ω“Ø –±—É–µ–Ω—á–∞ —è—Ä–¥”ô–º—á–µ –±–æ—Ç–º—ã–Ω.\n\n"
                         "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
                         "/village - –¢–∞—Ç–∞—Ä –∞–≤—ã–ª—ã–Ω–¥–∞ –±–µ—Ä –∫”©–Ω —Ç—É—Ä—ã–Ω–¥–∞ —É–π–ª–∞–Ω—É\n"
                         "/phrase - –¢–∞—Ç–∞—Ä —Ç–µ–ª–µ–Ω–¥”ô–≥–µ —Å“Ø–∑ —Ç–µ–∑–º”ô—Å–µ\n"
                         "/voice - —Ç–∞—Ç–∞—Ä —Ç–µ–ª–µ–Ω–¥”ô–≥–µ —Ç–∞–≤—ã—à–ª—ã —Ö–∞–±–∞—Ä\n"
                         "/image - —Ç–∞—Ç–∞—Ä –º”ô–¥”ô–Ω–∏—è—Ç–µ–Ω–Ω”ô–Ω —Ä”ô—Å–µ–º\n"
                         "/stats - –º–∏–Ω–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞\n\n"
                         "”ò–π—Ç–∏–∫, /village –±–æ–µ—Ä—ã–≥—ã –±–µ–ª”ô–Ω –±–∞—à–ª—ã–π–∫!")


# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –æ —Ç–∞—Ç–∞—Ä—Å–∫–æ–π –¥–µ—Ä–µ–≤–Ω–µ
@dp.message(Command("village"))
async def send_village_phrase(message: types.Message):
    phrase = random.choice(TATAR_VILLAGE_PHRASES)

    response = (f"üéë –¢–∞—Ç–∞—Ä –∞–≤—ã–ª—ã–Ω–¥–∞ –±–µ—Ä –∫”©–Ω:\n\n"
                f"üáπüá≥ –¢–∞—Ç–∞—Ä—á–∞: <b>{phrase['tatar']}</b>\n"
                f"üá∑üá∫ –†—É—Å—á–∞: <i>{phrase['russian']}</i>\n\n"
                f"üí° {phrase['explanation']}")

    await message.answer(response)

    # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ –∏–∑—É—á–µ–Ω–Ω—ã—Ö —Ñ—Ä–∞–∑ –≤ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–µ
    user_id = message.from_user.id
    user = await db.get_user_by_telegram_id_async(user_id)
    if user:
        await db.increment_user_score(user[0], 1)  # user[0] - —ç—Ç–æ user_id


# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è –æ—Ç–¥–µ–ª—å–Ω—ã—Ö —Ñ—Ä–∞–∑
@dp.message(Command("phrase"))
async def send_phrase(message: types.Message):
    # –í—ã–±–∏—Ä–∞–µ–º 3 —Å–ª—É—á–∞–π–Ω—ã–µ —Ñ—Ä–∞–∑—ã –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è
    selected_phrases = random.sample(TATAR_VILLAGE_PHRASES, min(3, len(TATAR_VILLAGE_PHRASES)))

    response = "üìö –ö”©–Ω–Ω–µ“£ —Ç–∞—Ç–∞—Ä—á–∞ —Å“Ø–∑ —Ç–µ–∑–º”ô—Å–µ:\n\n"
    for i, phrase in enumerate(selected_phrases, 1):
        response += f"{i}. <b>{phrase['tatar']}</b> - {phrase['russian']}\n"

    response += "\n‚úÖ –Ø—Ä–¥”ô–º ”©—á–µ–Ω /village –±–æ–µ—Ä—ã–≥—ã–Ω –∫—É–ª–ª–∞–Ω—ã–≥—ã–∑"
    await message.answer(response)

    # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ –∏–∑—É—á–µ–Ω–Ω—ã—Ö —Ñ—Ä–∞–∑ –≤ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–µ
    user_id = message.from_user.id
    user = await db.get_user_by_telegram_id_async(user_id)
    if user:
        await db.increment_user_score(user[0], len(selected_phrases))


# –û—Ç–ø—Ä–∞–≤–∫–∞ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è (–º–æ–¥–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–∞ –¥–ª—è —Ç–∞—Ç–∞—Ä—Å–∫–æ–≥–æ —è–∑—ã–∫–∞)
@dp.message(Command("voice"))
async def send_voice(message: types.Message):
    voice_path = os.path.join(VOICES_DIR, "tatar_example.ogg")
    try:
        # –ï—Å–ª–∏ —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –µ–≥–æ
        if os.path.exists(voice_path):
            voice = FSInputFile(voice_path)
            await message.answer_voice(voice=voice, caption="–¢–∞—Ç–∞—Ä —Ç–µ–ª–µ–Ω–¥”ô —Å”ô–ª–∞–º–ª”ô—à“Ø")
        else:
            # –ï—Å–ª–∏ —Ñ–∞–π–ª–∞ –Ω–µ—Ç, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            phrase = random.choice(TATAR_VILLAGE_PHRASES)
            await message.answer(f"üîä –¢–∞–≤—ã—à–ª—ã —è–∑–º–∞:\n\n{phrase['tatar']}\n\n<i>{phrase['russian']}</i>")
    except Exception as e:
        await message.answer("–¢–∞–≤—ã—à–ª—ã —Ö–∞–±–∞—Ä “ó–∏–±”ô—Ä“Ø–¥”ô —Ö–∞—Ç–∞ –∫–∏–ª–µ–ø —á—ã–∫—Ç—ã")
        logger.error(e)


# –û—Ç–ø—Ä–∞–≤–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è (–º–æ–¥–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–∞ –¥–ª—è —Ç–∞—Ç–∞—Ä—Å–∫–æ–π –∫—É–ª—å—Ç—É—Ä—ã)
@dp.message(Command("image"))
async def send_image(message: types.Message):
    image_path = os.path.join(IMAGES_DIR, "tatar_culture.jpg")
    try:
        # –ï—Å–ª–∏ —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –µ–≥–æ
        if os.path.exists(image_path):
            photo = FSInputFile(image_path)
            await message.answer_photo(photo=photo, caption="–¢–∞—Ç–∞—Ä –º–∏–ª–ª–∏ –∫–∏–µ–º–Ω”ô—Ä–µ–Ω–¥”ô–≥–µ —Å–µ–º—å—è")
        else:
            # –ï—Å–ª–∏ —Ñ–∞–π–ª–∞ –Ω–µ—Ç, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            phrase = random.choice(TATAR_VILLAGE_PHRASES)
            await message.answer(
                f"üñºÔ∏è –¢–∞—Ç–∞—Ä –º”ô–¥”ô–Ω–∏—è—Ç–µ:\n\n{phrase['explanation']}\n\n<b>{phrase['tatar']}</b>\n<i>{phrase['russian']}</i>")
    except Exception as e:
        await message.answer("–†”ô—Å–µ–º “ó–∏–±”ô—Ä“Ø–¥”ô —Ö–∞—Ç–∞ –∫–∏–ª–µ–ø —á—ã–∫—Ç—ã")
        logger.error(e)


# –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
@dp.message(Command("stats"))
async def user_stats(message: types.Message):
    user_id = message.from_user.id
    user = await db.get_user_by_telegram_id_async(user_id)

    if user:
        stats = await db.get_user_stats_async(user_id)
        if stats:
            response = (f"üìä C–µ–∑–Ω–µ“£ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:\n"
                        f"”®–π—Ä”ô–Ω–µ–ª–≥”ô–Ω —Ñ—Ä–∞–∑–ª–∞—Ä: {stats['total_score']}\n"
                        f"–ì–æ–º—É–º–∏ —Å—á–µ—Ç: {stats['total_score']}\n"
                        f"‚úÖ –î”ô–≤–∞–º –∏—Ç–µ–≥–µ–∑! –Ø“£–∞ —Ñ—Ä–∞–∑–ª–∞—Ä ”©–π—Ä”ô–Ω“Ø ”©—á–µ–Ω /village –±–æ–µ—Ä—ã–≥—ã–Ω –∫—É–ª–ª–∞–Ω—ã–≥—ã–∑")
            await message.answer(response)
        else:
            await message.answer("–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ç–∞–±—ã–ª–º–∞–¥—ã. /start –±–æ–µ—Ä—ã–≥—ã–Ω –∫—É–ª–ª–∞–Ω—ã–ø –∫–∞—Ä–∞–≥—ã–∑")
    else:
        await message.answer("–°–µ–∑ –±–æ—Ç—Ç–∞ —Ç–µ—Ä–∫”ô–ª–º”ô–≥”ô–Ω—Å–µ–∑. /start –±–æ–µ—Ä—ã–≥—ã–Ω –∫—É–ª–ª–∞–Ω—ã–≥—ã–∑")


# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π —Å –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—å—é
@dp.message(F.text)
async def handle_text(message: types.Message):
    text = message.text.lower()

    # –û—Ç–≤–µ—Ç—ã –Ω–∞ –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç–∏
    if any(word in text for word in ['—Ä”ô—Ö–º”ô—Ç', '—Ä–∞—Ö–º–µ—Ç', '—Å–ø–∞—Å–∏–±–æ', 'thanks', 'thank']):
        responses = [
            "–ó–∏–Ω“ª–∞—Ä! ”ò–π–±”ô—Ç —Å“Ø–∑–ª”ô—Ä–µ–≥–µ–∑ ”©—á–µ–Ω —Ä”ô—Ö–º”ô—Ç!",
            "–†”ô—Ö–º”ô—Ç! –¢–∞–≥—ã–Ω –¥–∞ —è“£–∞ —Ñ—Ä–∞–∑–ª–∞—Ä ”©–π—Ä”ô–Ω–µ—Ä–≥”ô —è—Ä–¥”ô–º –∏—Ç–µ–≥–µ–∑!",
            "–°–µ–∑–≥”ô –¥”ô —Ä”ô—Ö–º”ô—Ç! –¢–∞—Ç–∞—Ä —Ç–µ–ª–µ–Ω ”©–π—Ä”ô–Ω“Ø–¥”ô —É“£—ã—à–ª–∞—Ä —Ç–µ–ª–∏–º–µ–Ω!"
        ]
        await message.answer(random.choice(responses))
    else:
        # –î–ª—è –¥—Ä—É–≥–∏—Ö —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –∏–∑—É—á–∏—Ç—å —Ñ—Ä–∞–∑—ã
        await message.answer(
            "–°–µ–∑–Ω–µ“£ —è–∑—ã–≥—ã–∑–Ω—ã –∞“£–ª–∞–¥—ã–º. –¢–∞—Ç–∞—Ä —Ç–µ–ª–µ–Ω ”©–π—Ä”ô–Ω“Ø ”©—á–µ–Ω /village —è–∫–∏ /phrase –±–æ–µ—Ä—ã–≥—ã–Ω –∫—É–ª–ª–∞–Ω—ã–≥—ã–∑!")


# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
async def main():
    await dp.start_polling(bot)


if __name__ == "__main__":
    asyncio.run(main())
